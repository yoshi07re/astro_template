---
import { cva, type VariantProps } from 'class-variance-authority';

import type { HTMLTag, Polymorphic } from 'astro/types';

import { cn } from '@/lib/utils';

const buttonVariants = cva('inline-block', {
  variants: {
    intent: {
      primary: ['bg-blue-500', 'text-white', 'border-transparent', 'hover:bg-blue-600'],
      secondary: ['bg-white', 'text-gray-800', 'border-gray-400', 'hover:bg-gray-100'],
    },
    size: {
      small: ['text-sm', 'py-1', 'px-2'],
      medium: ['text-base', 'py-2', 'px-4'],
    },
  },
  compoundVariants: [{ intent: 'primary', size: 'medium', class: 'uppercase' }],
});

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof buttonVariants> & {
    class?: string;
  };

const { as: Component = 'button', intent = 'primary', size = 'medium', class: additionalClasses, ...rest } = Astro.props;
---

<Component class={cn(buttonVariants({ intent, size }), additionalClasses)} {...rest}>
  <slot />
</Component>
